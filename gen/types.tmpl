// Code generated by this package. DO NOT EDIT

package bitpack

import (
  "fmt"
  "math"
)

{{range $size := .}}
type Bit{{$size}} struct {
  Value int
}

func NewBit{{$size}}(value int) Bit{{$size}} {
  if value >= int(math.Pow(2, float64({{$size}}))) {
    panic(fmt.Sprintf("number %d cannot be stored in {{$size}} bits", value))
  }

  return Bit{{$size}}{Value: value}
}

func (Bit{{$size}}) Size() int {
  return {{$size}}
}

func (b Bit{{$size}}) Serialize() uint64 {
  return uint64(b.Value)
}
{{end}}
